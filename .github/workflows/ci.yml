name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test Services
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: cloud_user
          POSTGRES_PASSWORD: root
          POSTGRES_DB: postgres
        options: >-
          --health-cmd="pg_isready -U cloud_user -d postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    strategy:
      matrix:
        service: [auth-service, admin-panel, file-service, payment-service, support-service]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for PostgreSQL
        run: |
          for i in {1..30}; do
            nc -zv localhost 5432 && break || sleep 2
          done

      - name: Create test database
        run: |
          docker exec ${{ job.services.postgres.id }} psql -U cloud_user -d postgres -c "CREATE DATABASE cloud_storage_db;"

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and Test ${{ matrix.service }}
        working-directory: backend/${{ matrix.service }}
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/cloud_storage_db
          SPRING_DATASOURCE_USERNAME: cloud_user
          SPRING_DATASOURCE_PASSWORD: root
        run: |
          mvn clean install -Dspring.profiles.active=test
          mvn test -Dspring.profiles.active=test

  docker-build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [auth-service, admin-panel, file-service, payment-service, support-service]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image for ${{ matrix.service }}
        working-directory: backend/${{ matrix.service }}
        run: |
          DOCKER_IMAGE_NAME="lukaszandzej/cloud-storage-${{ matrix.service }}"
          TAG="${{ github.sha }}"
          docker build -t $DOCKER_IMAGE_NAME:$TAG .
          docker tag $DOCKER_IMAGE_NAME:$TAG $DOCKER_IMAGE_NAME:latest

      - name: Push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          DOCKER_IMAGE_NAME="lukaszandzej/cloud-storage-${{ matrix.service }}"
          TAG="${{ github.sha }}"
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push $DOCKER_IMAGE_NAME:$TAG
          docker push $DOCKER_IMAGE_NAME:latest
